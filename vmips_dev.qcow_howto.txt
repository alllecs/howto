		Получение и запуск эмулятора VMIPS
		Alexander Smirnov <alllecs@cs.niisi.ras.ru>
			Версия 08.06.2016

Об этом руководстве

Это руководство описывает этапы получения и запуска среды кросс-разработки для
процессоров ВМ8/ВМ9 на эмуляторе Qemu под ОС Debian Linux для архитектуры AMD64.
В это окружение входят:
кросс-компилятор GCC v5, ядро Linux, соответствующая файловая система для процессоров ВМ8/ВМ9, эмулятор VMIPS процессоров ВМ8/ВМ9, пример запуска тестовой программы под Linux в VMIPS и тестовая программа для бареметального запуска на эмуляторе VMIPS.

В корневой директории пользователя dev, имеются каталоги:
bin: бинарный файл VMIPS'a
dev_system: кросс-компилятор (core/toolchain), файловая система (core/rootfs)
	и вспомогательные скрипты
etc: конфигурация VMIPS
example: пример для запуска на VMIPS
newlib: реализация стандартной библиотеки языка Си
newlib.test: пример программы для бареметального запуска на VMIPS 


Содержание:
1. Об эмуляторе VMIPS
2. Получение среды кросс-разработки со встроенным эмулятором VMIPS
3. Пример запуска среды кросс-разработки на эмуляторе Qemu
4. Пример загрузки файлов в среду кросс-разработки
5. Пример компиляции и запуска программ под Linux в VMIPS
6. Пример запуска бареметальных программ (работающих монопольно и без каких-либо
программных ограничений) с помощью загрузчика PMON2000
7. Пример бареметального запуска программ на эмуляторе VMIPS


1. Об эмуляторе VMIPS

VMIPS - это программный эмулятор процессора, совместимого
с ISA MIPS. Исходно в качестве прототипов
VMIPS использовал процессора VM8/VM9. Эмулятор
покомандный, на уровне программной модели прототипов.
Эмулируемые программы подаются на вход в виде двоичных файлов.
Также, эмулятор реализует порт ввода/вывода и некоторые
другие устройства, имеющие отображаемые на память регистры.


2. Получение среды кросс-разработки со встроенным эмулятором VMIPS

Для получения среды кросс-разработки (почти 8гб!) необходимо перейти на сайт:

http://duna.niisi.ru/files/srisa_dev_img/dev.qcow

В появившихся полях логина и пароля ввести:

	логин: srisa_dev_customer
	пароль: fded4b5f2b1c98aebf13cccbcfd6053e

После чего выбрать путь для сохранения и сохранить среду кросс-разработки на ПК (далее хост система).

3. Пример запуска среды кросс-разработки на эмуляторе Qemu

Эмулятор (виртуальная машина) Qemu выбран в качестве примера.
Полученную среду кросс-разработки возможно запустить и на других
виртуальных машинах, поддерживающих фармат .qcow (.qcow2).
Образ qcow содержит в себе Debian Linux для архитектуры AMD64.

Для запуска среды кросс-разработки на эмуляторе (виртуальной машине) Qemu
понадобятся:

- qemu-system
- среда кросс-разработки со встроенным эмулятором VMIPS (получен в пункте 2)

Для установки Qemu на Debian Linux необходимо выполнить:

	apt-get install qemu-system

После установки перейти в каталог с полученной из пункта 2 средой кросс-разработки.
Для запуска на хост системе среды кросс-разработки со встроенным эмулятором VMIPS на
виртуальной машине Qemu, необходимо выполнить в командной строке
(пример для Debian Linux):

	qemu-system-x86_64 -enable-kvm -hda dev.qcow -m 2G

После загрузки Linux необходимо ввести логин и пароль.

	login: dev
	Password: dev

4. Пример загрузки файлов в среду кросс-разработки

Для загрузки файлов в среду кросс-разработки со встроенным эмулятором VMIPS
необходимо смонтировать среду кросс-разработки во временный каталог или
скопировать файлы по локальной сети с помощью ssh на эмулируемую ОС.

4.1 Загрузка файлов в среду кросс-разработки с помощью монтирования образа
во временный каталог (например /mnt).

Дальнейшие действия рекомендуется выполнять под root-пользователем при размонтированной среде кросс-разработки (выключенном эмуляторе Qemu).

Загрузить nbd модуль ядра.

	modprobe nbd max_part=8

Экспортировать образ на диске в качестве сетевого блочного устройства (например /dev/nbd0).
В качестве сетевого блочного устройства можно использовать  /dev/nbd0,
/dev/nbd1, /dev/nbd2 и т.д. в зависимости от свободных устройств.
Рекомендуется указывать полный путь к образу (например /home/user/dev.qcow).

	qemu-nbd --connect=/dev/nbd0 /home/user/dev.qcow

Смонтировать среду кросс-разработки во временный каталог (например /mnt) :

	mount /dev/nbd0p1 /mnt/

Для копирования файлов (например в корневой каталог пользователя dev),
выполнить:

	cp file_name /mnt/home/dev/

После выполнения всех действий, необходимо размонтировать временный каталог /mnt

	umount /mnt

и отключить образ диска

	qemu-nbd --disconnect /dev/nbd0

4.2 Загрузка файлов в среду кросс-разработки по ssh

Для загрузки файлов по ssh необходимо в строку запуска Qemu
добавить -redir tcp:2222::22.
Строка запуска с добавлением:

	qemu-system-x86_64 -enable-kvm -hda dev.qcow -m 2G -redir tcp:2222::22

Для подключения по ssh к среде кросс-разработки с хост системы необходимо выполнить:

	ssh -p 2222 dev@localhost

Для передачи файлов в среду кросс-разработки с хост системы необходимо выполнить:

	scp -P 2222 file_name dev@localhost:

пароль: dev

где file_name — имя передаваемого файла.


5. Пример компиляции и запуска программ под Linux в VMIPS

В каталоге example/ находится пример авто-векторизации циклов для векторного
сопроцессора CPV (системы на кристалле ВМ8). Для его компиляции и запуска
под Linux'ом на эмуляторе VMIPS необходимо выполнить:

	 make && make run.

За инструкцией компиляции, закачивания на эмулируемую
файловую систему исполняемых (и не только) файлов и запуском VMIPS'а обратитесь
к прилагаемому к этому примеру файлу Makefile.

По окончанию загрузки появится приглашение командной строки эмулируемого
окружения Linux.
В списке файлов находится исполняемый файл скомпилированной программы test_program.
Исполняемый файл можно запустить:

	./test_program

для выхода из VMIPS нажмите Ctrl + C

6. Пример запуска бареметальных программ (работающих монопольно и без каких-либо
программных ограничений) с помощью загрузчика PMON2000

Строка запуска PMON2000 на эмуляторе VMIPS:

vmips -o ioport=2 -o memsize=0x10000000 -o noinstdump \
	\ -o reservedranges="0x1b400100 0x20" \
	\ dev_system/vmipsrun/fw.k64rio.bin

Пример программы для бареметального запуска на эмуляторе VMIPS с помощью загрузчика PMON2000 расположен в каталоге newlib.test. Для перехода в каталог newlib.test необходимо выполнить:

	cd  newlib.test

Для получения подробной информации о файлах в каталоге newlib.test обратитесь к прилагаемому к этому примеру файлу README.

Для компиляции программы необходимо выполнить:

	make

После выполнения будут получены файлы: test.bin, boot.bin и test.elf

Запуск PMON2000 на эмуляторе VMIPS с загрузкой бинарного файла в память:

vmips -o ram="test.bin 0x0000" -o noioportreserved \
	\ -o memsize=0x10000000 -o noinstdump \
	\ -o reservedranges="0x1b400100 0x20" \
	\ dev_system/vmipsrun/fw.k64rio.bin

где test.bin — бинарный файл программы.
Строка запуска бинарного файла (test.bin) на эмуляторе VMIPS из PMON:

	g 0x80001000

После выполнения будет выведена надпись: «Hello, world!».

7. Пример бареметального запуска программ на эмуляторе VMIPS

В качестве примера компиляции и бареметального запуска программ на эмуляторе VMIPS в каталоге newlib.test выполнить:

	make run

После выполнения будет запущена тестовая программа на эмуляторе VMIPS и в качестве результата выведена надпись: «Hello, world!».
